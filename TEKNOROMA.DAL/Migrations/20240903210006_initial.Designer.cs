// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TEKNOROMA.DAL.Data.Context;

#nullable disable

namespace TEKNOROMA.DAL.Migrations
{
    [DbContext(typeof(TeknoromaDbContext))]
    [Migration("20240903210006_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "ComputerHardware",
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 620, DateTimeKind.Local).AddTicks(3993),
                            Description = "This Category About Computer Hardwares"
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "MobilePhone",
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 622, DateTimeKind.Local).AddTicks(7633),
                            Description = "This Category About Mobile Phones"
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Camera",
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 622, DateTimeKind.Local).AddTicks(7646),
                            Description = "This Category About Cameras"
                        },
                        new
                        {
                            ID = 4,
                            CategoryName = "PhotographicCamera",
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 622, DateTimeKind.Local).AddTicks(7648),
                            Description = "This Category About Photographic Cameras"
                        },
                        new
                        {
                            ID = 5,
                            CategoryName = "PackageSoftware",
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 622, DateTimeKind.Local).AddTicks(7649),
                            Description = "This Category About Package Softwares"
                        });
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(2055),
                            Email = "paulthrower@gmail.com",
                            FirstName = "Paul S.",
                            Gender = 0,
                            IdentificationNumber = "93769866866",
                            LastName = "Thrower"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(3270),
                            Email = "johnbarnhart@outlook.com",
                            FirstName = "John J.",
                            Gender = 0,
                            IdentificationNumber = "56992551143",
                            LastName = "Barnhart"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(3274),
                            Email = "modestoclark@yahoo.com",
                            FirstName = "Modesto E.",
                            Gender = 1,
                            IdentificationNumber = "74991120461",
                            LastName = "Clark"
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(3276),
                            Email = "rogercrawford@gmail.com",
                            FirstName = "Roger J.",
                            Gender = 0,
                            IdentificationNumber = "37196481028",
                            LastName = "Crawford"
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(3277),
                            Email = "jessejorge@outlook.com",
                            FirstName = "Jesse E.",
                            Gender = 1,
                            IdentificationNumber = "87266168646",
                            LastName = "Jorge"
                        },
                        new
                        {
                            ID = 6,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(3282),
                            Email = "keithneville@yahoo.com",
                            FirstName = "Keith N.",
                            Gender = 1,
                            IdentificationNumber = "77474758025",
                            LastName = "Neville"
                        },
                        new
                        {
                            ID = 7,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(3283),
                            Email = "jeffmorse@gmail.com",
                            FirstName = "Jeff M.",
                            Gender = 0,
                            IdentificationNumber = "78798330914",
                            LastName = "Morse"
                        },
                        new
                        {
                            ID = 8,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(3285),
                            Email = "thomascrouch@outlook.com",
                            FirstName = "Thomas J.",
                            Gender = 0,
                            IdentificationNumber = "58633320397",
                            LastName = "Crouch"
                        },
                        new
                        {
                            ID = 9,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(3286),
                            Email = "armandchristie@yahoo.com",
                            FirstName = "Armand B.",
                            Gender = 0,
                            IdentificationNumber = "48187808613",
                            LastName = "Christie"
                        },
                        new
                        {
                            ID = 10,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(3289),
                            Email = "lolitabellamy@gmail.com",
                            FirstName = "Lolita R.",
                            Gender = 1,
                            IdentificationNumber = "48596366099",
                            LastName = "Bellamy"
                        });
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StoreID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StoreID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(5696),
                            Department = "Sales Director",
                            FirstName = "Elizabeth J.",
                            Gender = 1,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "91154698403",
                            LastName = "McDowell",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Sales Director",
                            Salary = 1250m,
                            StoreID = 1
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8135),
                            Department = "Sales Account Manager",
                            FirstName = "Helen J.",
                            Gender = 1,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "12832155199",
                            LastName = "Spinks",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Sales Account Manager",
                            Salary = 2000m,
                            StoreID = 1
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8143),
                            Department = "District Sales Manager",
                            FirstName = "Richie L.",
                            Gender = 0,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "07056163008",
                            LastName = "Santos",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "District Sales Manager",
                            Salary = 3000m,
                            StoreID = 1
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8146),
                            Department = "Regional Sales Manager",
                            FirstName = "Melissa K.",
                            Gender = 1,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "54988164456",
                            LastName = "Worcester",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Regional Sales Manager",
                            Salary = 2500m,
                            StoreID = 2
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8149),
                            Department = "Export Manager",
                            FirstName = "Erin C.",
                            Gender = 1,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "46257358534",
                            LastName = "Austin",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Export Manager",
                            Salary = 1750m,
                            StoreID = 2
                        },
                        new
                        {
                            ID = 6,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8154),
                            Department = "Territory Sales Manager",
                            FirstName = "Michael N.",
                            Gender = 0,
                            HireDate = new DateTime(2024, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "56253655019",
                            LastName = "Chaparro",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Territory Sales Manager",
                            Salary = 2250m,
                            StoreID = 2
                        },
                        new
                        {
                            ID = 7,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8157),
                            Department = "E-Commerce Director",
                            FirstName = "Daniel E.",
                            Gender = 0,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "05878968905",
                            LastName = "Horton",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "E-Commerce Director",
                            Salary = 3250m,
                            StoreID = 3
                        },
                        new
                        {
                            ID = 8,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8175),
                            Department = "Regional Sales Manager",
                            FirstName = "Scarlet M.",
                            Gender = 1,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "08147563289",
                            LastName = "Clay",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Regional Sales Manager",
                            Salary = 1000m,
                            StoreID = 3
                        },
                        new
                        {
                            ID = 9,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8178),
                            Department = "District Sales Manager",
                            FirstName = "Julie E.",
                            Gender = 1,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "37679564411",
                            LastName = "Brooks",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "District Sales Manager",
                            Salary = 1500m,
                            StoreID = 3
                        },
                        new
                        {
                            ID = 10,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8182),
                            Department = "Sales Director",
                            FirstName = "Gladys L.",
                            Gender = 1,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "05911881446",
                            LastName = "Hinderliter",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Sales Director",
                            Salary = 1750m,
                            StoreID = 4
                        },
                        new
                        {
                            ID = 11,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8184),
                            Department = "Export Manager",
                            FirstName = "Craig D.",
                            Gender = 0,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "25076882851",
                            LastName = "Pettey",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Export Manager",
                            Salary = 3250m,
                            StoreID = 4
                        },
                        new
                        {
                            ID = 12,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8187),
                            Department = "District Sales Manager",
                            FirstName = "Christopher M.",
                            Gender = 0,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "64589309183",
                            LastName = "Lee",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "District Sales Manager",
                            Salary = 2750m,
                            StoreID = 4
                        },
                        new
                        {
                            ID = 13,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8190),
                            Department = "Sales Account Manager",
                            FirstName = "Selina R.",
                            Gender = 1,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "08141949730",
                            LastName = "Lincoln",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "Sales Account Manager",
                            Salary = 1500m,
                            StoreID = 5
                        },
                        new
                        {
                            ID = 14,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8193),
                            Department = "E-Commerce Director",
                            FirstName = "Jillian K.",
                            Gender = 1,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "08768319219",
                            LastName = "Pope",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "E-Commerce Director",
                            Salary = 2750m,
                            StoreID = 5
                        },
                        new
                        {
                            ID = 15,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 626, DateTimeKind.Local).AddTicks(8196),
                            Department = "District Sales Manager",
                            FirstName = "Nelson J.",
                            Gender = 0,
                            HireDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdentificationNumber = "92525708751",
                            LastName = "Thompson",
                            PaymentDate = new DateTime(2024, 7, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Position = "District Sales Manager",
                            Salary = 3500m,
                            StoreID = 5
                        });
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Expense", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Expenses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Amount = 1500m,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 628, DateTimeKind.Local).AddTicks(2753),
                            Date = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ofis Kirası"
                        },
                        new
                        {
                            ID = 2,
                            Amount = 300m,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 628, DateTimeKind.Local).AddTicks(3552),
                            Date = new DateTime(2024, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Elektrik Faturası"
                        },
                        new
                        {
                            ID = 3,
                            Amount = 100m,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 628, DateTimeKind.Local).AddTicks(3557),
                            Date = new DateTime(2024, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Internet"
                        });
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Invoice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Invoices");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Amount = 2000m,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 628, DateTimeKind.Local).AddTicks(5918),
                            Date = new DateTime(2024, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "INV001"
                        },
                        new
                        {
                            ID = 2,
                            Amount = 1500m,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 628, DateTimeKind.Local).AddTicks(6729),
                            Date = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "INV002"
                        },
                        new
                        {
                            ID = 3,
                            Amount = 2500m,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 628, DateTimeKind.Local).AddTicks(6734),
                            Date = new DateTime(2024, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InvoiceNumber = "INV003"
                        });
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2239),
                            CustomerID = 1,
                            OrderDate = new DateTime(2024, 9, 5, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2243)
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2942),
                            CustomerID = 2,
                            OrderDate = new DateTime(2024, 9, 6, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2946)
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2950),
                            CustomerID = 3,
                            OrderDate = new DateTime(2024, 9, 7, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2951)
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2952),
                            CustomerID = 4,
                            OrderDate = new DateTime(2024, 9, 8, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2953)
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2954),
                            CustomerID = 5,
                            OrderDate = new DateTime(2024, 9, 9, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2955)
                        },
                        new
                        {
                            ID = 6,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2959),
                            CustomerID = 6,
                            OrderDate = new DateTime(2024, 9, 10, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2959)
                        },
                        new
                        {
                            ID = 7,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2961),
                            CustomerID = 7,
                            OrderDate = new DateTime(2024, 9, 11, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2961)
                        },
                        new
                        {
                            ID = 8,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2963),
                            CustomerID = 8,
                            OrderDate = new DateTime(2024, 9, 12, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2963)
                        },
                        new
                        {
                            ID = 9,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2964),
                            CustomerID = 9,
                            OrderDate = new DateTime(2024, 9, 13, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2965)
                        },
                        new
                        {
                            ID = 10,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2967),
                            CustomerID = 10,
                            OrderDate = new DateTime(2024, 9, 14, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(2967)
                        });
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.OrderItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(6975),
                            OrderID = 1,
                            ProductID = 1,
                            Quantity = 25,
                            UnitPrice = 15000m
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(8066),
                            OrderID = 2,
                            ProductID = 5,
                            Quantity = 50,
                            UnitPrice = 7500m
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(8070),
                            OrderID = 3,
                            ProductID = 10,
                            Quantity = 15,
                            UnitPrice = 72500m
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(8072),
                            OrderID = 4,
                            ProductID = 20,
                            Quantity = 45,
                            UnitPrice = 32500m
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(8073),
                            OrderID = 5,
                            ProductID = 25,
                            Quantity = 5,
                            UnitPrice = 4250m
                        },
                        new
                        {
                            ID = 6,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(8077),
                            OrderID = 6,
                            ProductID = 3,
                            Quantity = 30,
                            UnitPrice = 17500m
                        },
                        new
                        {
                            ID = 7,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(8079),
                            OrderID = 7,
                            ProductID = 7,
                            Quantity = 10,
                            UnitPrice = 65000m
                        },
                        new
                        {
                            ID = 8,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(8080),
                            OrderID = 8,
                            ProductID = 9,
                            Quantity = 35,
                            UnitPrice = 40000m
                        },
                        new
                        {
                            ID = 9,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(8082),
                            OrderID = 9,
                            ProductID = 12,
                            Quantity = 40,
                            UnitPrice = 22250m
                        },
                        new
                        {
                            ID = 10,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(8084),
                            OrderID = 10,
                            ProductID = 17,
                            Quantity = 20,
                            UnitPrice = 37500m
                        });
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.HasIndex("SupplierID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(6433),
                            Description = "Intel Processor",
                            Price = 15000m,
                            ProductName = "Intel i9-12900K",
                            StockQuantity = 1000,
                            SupplierID = 1
                        },
                        new
                        {
                            ID = 2,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8005),
                            Description = "AMD Processor",
                            Price = 20000m,
                            ProductName = "AMD Ryzen 9 9950X ",
                            StockQuantity = 750,
                            SupplierID = 1
                        },
                        new
                        {
                            ID = 3,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8010),
                            Description = "Asus Motherborad",
                            Price = 17500m,
                            ProductName = "Asus ROG Strix X670E-E",
                            StockQuantity = 1250,
                            SupplierID = 1
                        },
                        new
                        {
                            ID = 4,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8012),
                            Description = "GSKILL RAM",
                            Price = 10000m,
                            ProductName = "GSKILL 64GB (2x32GB) DDR4 4000MHz CL18",
                            StockQuantity = 500,
                            SupplierID = 1
                        },
                        new
                        {
                            ID = 5,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8014),
                            Description = "Samsung SSD",
                            Price = 7500m,
                            ProductName = "Samsung 980 PRO NVMe™ M.2 SSD 1 TB",
                            StockQuantity = 2000,
                            SupplierID = 1
                        },
                        new
                        {
                            ID = 6,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8019),
                            Description = "Apple Mobile Phone",
                            Price = 80000m,
                            ProductName = "Apple iPhone 15 Pro Max 256 GB",
                            StockQuantity = 2500,
                            SupplierID = 2
                        },
                        new
                        {
                            ID = 7,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8020),
                            Description = "Samsung Mobile Phone",
                            Price = 65000m,
                            ProductName = "Samsung Galaxy S23 Ultra 256 GB",
                            StockQuantity = 1500,
                            SupplierID = 2
                        },
                        new
                        {
                            ID = 8,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8022),
                            Description = "Xiaomi Mobile Phone",
                            Price = 25000m,
                            ProductName = "Xiaomi Mi 11 Ultra 256 GB",
                            StockQuantity = 3000,
                            SupplierID = 2
                        },
                        new
                        {
                            ID = 9,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8024),
                            Description = "Apple Mobile Phone",
                            Price = 40000m,
                            ProductName = "Apple iPhone SE 2 (2020) 64 GB",
                            StockQuantity = 3500,
                            SupplierID = 2
                        },
                        new
                        {
                            ID = 10,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8027),
                            Description = "Samsung Mobile Phone",
                            Price = 72500m,
                            ProductName = "Samsung Galaxy Z Flip 3 128 GB",
                            StockQuantity = 1750,
                            SupplierID = 2
                        },
                        new
                        {
                            ID = 11,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8051),
                            Description = "TP-Link Camera",
                            Price = 15000m,
                            ProductName = "TP-Link Tapo C420S2, 2K 4MP QHD",
                            StockQuantity = 5000,
                            SupplierID = 3
                        },
                        new
                        {
                            ID = 12,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8053),
                            Description = "Jadfezy Camera",
                            Price = 22250m,
                            ProductName = "Jadfezy WiFi Action Camera Ultra HD 1080p",
                            StockQuantity = 4500,
                            SupplierID = 3
                        },
                        new
                        {
                            ID = 13,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8054),
                            Description = "Sony Camera",
                            Price = 35000m,
                            ProductName = "Sony FX30 Body Süper 35 Digital Cinema Camera",
                            StockQuantity = 2500,
                            SupplierID = 3
                        },
                        new
                        {
                            ID = 14,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8056),
                            Description = "Xiaomi Camera",
                            Price = 12500m,
                            ProductName = "Xiaomi Smart Camera C300 Spherical IP Security Camera",
                            StockQuantity = 4750,
                            SupplierID = 3
                        },
                        new
                        {
                            ID = 15,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8058),
                            Description = "Canon Camera",
                            Price = 37500m,
                            ProductName = "Canon EOS 2000D BK 18-55 EU26 DSLR",
                            StockQuantity = 2750,
                            SupplierID = 3
                        },
                        new
                        {
                            ID = 16,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8060),
                            Description = "Nikon Photographic Camera",
                            Price = 50000m,
                            ProductName = "Nikon D7500 20.9MP DSLR",
                            StockQuantity = 3000,
                            SupplierID = 4
                        },
                        new
                        {
                            ID = 17,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8061),
                            Description = "Panasonic Photographic Camera",
                            Price = 37500m,
                            ProductName = "Panasonic LUMIX G85 4K Digital Camera",
                            StockQuantity = 7500,
                            SupplierID = 4
                        },
                        new
                        {
                            ID = 18,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8064),
                            Description = "Sony Photographic Camera",
                            Price = 25000m,
                            ProductName = "Sony Alpha a6400 Mirrorless Camera",
                            StockQuantity = 1500,
                            SupplierID = 4
                        },
                        new
                        {
                            ID = 19,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8066),
                            Description = "Fujifilm Photographic Camera",
                            Price = 45000m,
                            ProductName = "Fujifilm X-T5 Mirrorless Digital Camera",
                            StockQuantity = 4500,
                            SupplierID = 4
                        },
                        new
                        {
                            ID = 20,
                            CategoryID = 4,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8068),
                            Description = "Canon Photographic Camera",
                            Price = 32500m,
                            ProductName = "Canon EOS REBEL SL3 (BK) + EF-S18-55mm",
                            StockQuantity = 7750,
                            SupplierID = 4
                        },
                        new
                        {
                            ID = 21,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8070),
                            Description = "Microsoft Office Package Software",
                            Price = 5000m,
                            ProductName = "Microsoft Office 365 Personal",
                            StockQuantity = 10000,
                            SupplierID = 5
                        },
                        new
                        {
                            ID = 22,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8071),
                            Description = "Internet Download Manager Package Software",
                            Price = 2500m,
                            ProductName = "Internet Download Manager Lifetime License",
                            StockQuantity = 7000,
                            SupplierID = 5
                        },
                        new
                        {
                            ID = 23,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8073),
                            Description = "CCleaner Package Software",
                            Price = 3000m,
                            ProductName = "CCleaner Pro Plus",
                            StockQuantity = 5000,
                            SupplierID = 5
                        },
                        new
                        {
                            ID = 24,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8075),
                            Description = "WinRAR Package Software",
                            Price = 1500m,
                            ProductName = "WinRAR SINGLE-USER - LICENSE",
                            StockQuantity = 2500,
                            SupplierID = 5
                        },
                        new
                        {
                            ID = 25,
                            CategoryID = 5,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 624, DateTimeKind.Local).AddTicks(8077),
                            Description = "Revo Uninstaller Package Software",
                            Price = 4250m,
                            ProductName = "Revo Uninstaller PRO PORTABLE",
                            StockQuantity = 7500,
                            SupplierID = 5
                        });
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.ServiceRequest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("ServiceRequests");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 627, DateTimeKind.Local).AddTicks(9642),
                            Description = "Uygulama Çalışmıyor.",
                            Status = "Aktif",
                            Type = "Uygulama Hatasi"
                        });
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Store", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(5360),
                            Location = "Istanbul",
                            Name = "Teknorama Istanbul"
                        },
                        new
                        {
                            ID = 2,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(5998),
                            Location = "Ankara",
                            Name = "Teknorama Ankara"
                        },
                        new
                        {
                            ID = 3,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(6002),
                            Location = "Izmir",
                            Name = "Teknorama Izmir"
                        },
                        new
                        {
                            ID = 4,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(6003),
                            Location = "Antalya",
                            Name = "Teknorama Antalya"
                        },
                        new
                        {
                            ID = 5,
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 625, DateTimeKind.Local).AddTicks(6004),
                            Location = "Bursa",
                            Name = "Teknorama Bursa"
                        });
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ContactInfo = "(304) 403-9258",
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 623, DateTimeKind.Local).AddTicks(5484),
                            SupplierName = "Kunde, Wyman and Lynch"
                        },
                        new
                        {
                            ID = 2,
                            ContactInfo = "(479) 319-9089",
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 623, DateTimeKind.Local).AddTicks(6042),
                            SupplierName = "Yost - Schaefer"
                        },
                        new
                        {
                            ID = 3,
                            ContactInfo = "(204) 682-6716",
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 623, DateTimeKind.Local).AddTicks(6046),
                            SupplierName = "Upton, Runte and Crist"
                        },
                        new
                        {
                            ID = 4,
                            ContactInfo = "(435) 939-5118",
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 623, DateTimeKind.Local).AddTicks(6047),
                            SupplierName = "Sipes and Sons"
                        },
                        new
                        {
                            ID = 5,
                            ContactInfo = "(801) 473-0584",
                            CreatedDate = new DateTime(2024, 9, 4, 0, 0, 5, 623, DateTimeKind.Local).AddTicks(6048),
                            SupplierName = "Kihn, McClure and Muller"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Employee", b =>
                {
                    b.HasOne("TEKNOROMA.MODEL.Entities.Store", "Store")
                        .WithMany("Employees")
                        .HasForeignKey("StoreID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Store");
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Order", b =>
                {
                    b.HasOne("TEKNOROMA.MODEL.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.OrderItem", b =>
                {
                    b.HasOne("TEKNOROMA.MODEL.Entities.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TEKNOROMA.MODEL.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Product", b =>
                {
                    b.HasOne("TEKNOROMA.MODEL.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TEKNOROMA.MODEL.Entities.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Store", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("TEKNOROMA.MODEL.Entities.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
